<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
* Implements hook_preprocess_HOOK() for field.html.twig.
*/

function refuges_preprocess_field(&$variables, $hook) {
  //dpm($variables);

  if ($variables['element']['#field_name'] == 'field_photos' && $variables['element']['#view_mode'] == 'full') {
    $variables['current_view_mode'] = 'full';
  }
}

function refuges_theme_suggestions_block_alter(array &$suggestions, array $variables) {
	// dpm($variables); return;
	
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

function refuges_preprocess_block(&$variables) {
  //dpm($variables['elements']);
  if (isset($variables["elements"]["#id"])) {
    $block_id = $variables["elements"]["#id"];
    $theme = \Drupal::theme()->getActiveTheme()->getName();
    if (str_replace($theme . '_', '', $block_id) == 'search') {
      $variables['region'] = 'top';
    }
  }
}

/**
 * Implements hook_theme_suggestions_page_alter().
 * Add suggestion template for page.html.twig
 */
function refuges_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add template suggestion based on node type
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__type__'.$content_type;
    $suggestions[] = 'page__node__' . $node->id();
    //kint($suggestions);
  }
}